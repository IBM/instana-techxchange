"use strict";(self.webpackChunkinstana_techxchange=self.webpackChunkinstana_techxchange||[]).push([[8592],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},81245:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={title:"8. Summary",description:"Welcome to the Synthetic Monitoring and Action Catalog lab",sidebar_position:80},o="Lab summary",l={unversionedId:"instana-v2/synthetic-pop/summary/index",id:"instana-v2/synthetic-pop/summary/index",title:"8. Summary",description:"Welcome to the Synthetic Monitoring and Action Catalog lab",source:"@site/labs/instana-v2/synthetic-pop/8-summary/index.mdx",sourceDirName:"instana-v2/synthetic-pop/8-summary",slug:"/instana-v2/synthetic-pop/summary/",permalink:"/instana-techxchange/labs/instana-v2/synthetic-pop/summary/",draft:!1,editUrl:"https://github.com/IBM/instana-techxchange/tree/main/labs/instana-v2/synthetic-pop/8-summary/index.mdx",tags:[],version:"current",sidebarPosition:80,frontMatter:{title:"8. Summary",description:"Welcome to the Synthetic Monitoring and Action Catalog lab",sidebar_position:80},sidebar:"tutorialSidebar",previous:{title:"7. Action Catalog",permalink:"/instana-techxchange/labs/instana-v2/synthetic-pop/action-catalog/"},next:{title:"1. Introduction",permalink:"/instana-techxchange/labs/instana-v2/opentelemetry/introduction/"}},c={},s=[],p={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"lab-summary"},"Lab summary"),(0,r.kt)("p",null,"During the lab exercise, we:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Installed a Synthetic Point of Presence (PoP)"),(0,r.kt)("li",{parentName:"ul"},"Created a simple synthetic test using a REST call."),(0,r.kt)("li",{parentName:"ul"},"Created a complex synthetic test with javascript to execute multiple REST calls and perform an evaluation."),(0,r.kt)("li",{parentName:"ul"},"Created a simple synthetic test using a pre-defined Selenium IDE script."),(0,r.kt)("li",{parentName:"ul"},"Created a Smart Alert for a synthetic test."),(0,r.kt)("li",{parentName:"ul"},"Created an Action and manually run it from the context of triggered Event."),(0,r.kt)("li",{parentName:"ul"},"Explored the Instana/Ansible integration and manually run some of integrated Ansible playbook actions.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"In this lab, the following feature flags were enabled in the lab's Instana Standard Edition (self-hosted on-premise) backend server, using the following commands:"),(0,r.kt)("p",{parentName:"admonition"},"stanctl backend apply --core-feature-flags feature.automation.enabled=true",(0,r.kt)("br",{parentName:"p"}),"\n","stanctl backend apply --core-feature-flags feature.action.automation.enabled=true",(0,r.kt)("br",{parentName:"p"}),"\n","stanctl backend apply --core-feature-flags feature.synthetics.enabled=true",(0,r.kt)("br",{parentName:"p"}),"\n","stanctl backend apply --core-feature-flags feature.synthetic.browser.create.test.enabled=true",(0,r.kt)("br",{parentName:"p"}),"\n","stanctl backend apply --core-feature-flags feature.synthetic.browser.script.enabled=true",(0,r.kt)("br",{parentName:"p"}),"\n","stanctl backend apply --core-feature-flags feature.infra.smart.alerts.enabled=true   ")))}m.isMDXComponent=!0}}]);