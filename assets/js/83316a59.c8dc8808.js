"use strict";(self.webpackChunkinstana_techxchange=self.webpackChunkinstana_techxchange||[]).push([[9319],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(n),d=o,h=u["".concat(c,".").concat(d)]||u[d]||m[d]||l;return n?a.createElement(h,r(r({ref:t},p),{},{components:n})):a.createElement(h,r({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,r=new Array(l);r[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:o,r[1]=i;for(var s=2;s<l;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},80952:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=n(87462),o=(n(67294),n(3905));const l={title:"6. OpenTelemetry Collector",description:"OpenTelemetry Collector",sidebar_position:6},r=void 0,i={unversionedId:"instana-v2/opentelemetry/opentelemetry-collector/index",id:"instana-v2/opentelemetry/opentelemetry-collector/index",title:"6. OpenTelemetry Collector",description:"OpenTelemetry Collector",source:"@site/labs/instana-v2/opentelemetry/6-opentelemetry-collector/index.mdx",sourceDirName:"instana-v2/opentelemetry/6-opentelemetry-collector",slug:"/instana-v2/opentelemetry/opentelemetry-collector/",permalink:"/instana-techxchange/labs/instana-v2/opentelemetry/opentelemetry-collector/",draft:!1,editUrl:"https://github.com/IBM/instana-techxchange/tree/main/labs/instana-v2/opentelemetry/6-opentelemetry-collector/index.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"6. OpenTelemetry Collector",description:"OpenTelemetry Collector",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"5. Exploring Instana",permalink:"/instana-techxchange/labs/instana-v2/opentelemetry/explore/"},next:{title:"Quiz",permalink:"/instana-techxchange/labs/instana-v2/opentelemetry/quiz/"}},c={},s=[{value:"Introduction",id:"introduction",level:2},{value:"OpenTelemetry Collector",id:"opentelemetry-collector",level:2},{value:"Instana backend - configuration",id:"instana-backend---configuration",level:2},{value:"Instana backend - verification",id:"instana-backend---verification",level:2},{value:"Instana agent - configuration",id:"instana-agent---configuration",level:2},{value:"OpenTelemetry Collector - configuration",id:"opentelemetry-collector---configuration",level:2},{value:"Log content creation",id:"log-content-creation",level:2},{value:"Instana verification",id:"instana-verification",level:2},{value:"Summary",id:"summary",level:2}],p={toc:s},u="wrapper";function m(e){let{components:t,...l}=e;return(0,o.kt)(u,(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"Besides the application metrics and tracing, OpenTelemetry standard also supports ingesting log content. In this scenario, you will learn how to deliver logs to the Instana backend using OpenTelemetry Contrib Collector."),(0,o.kt)("h2",{id:"opentelemetry-collector"},"OpenTelemetry Collector"),(0,o.kt)("p",null,"The OpenTelemetry Collector offers a vendor-agnostic implementation of how to receive, process and export telemetry data. It removes the need to run, operate, and maintain multiple agents/collectors. This works with improved scalability and supports open source observability data formats (e.g. Jaeger, Prometheus, Fluent Bit, etc.) sending to one or more open source or commercial backends. The local Collector agent is the default location to which instrumentation libraries export their telemetry data."),(0,o.kt)("p",null,"OpenTelemetry collector objectives:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Usability: Reasonable default configuration, supports popular protocols, runs and collects out of the box."),(0,o.kt)("li",{parentName:"ul"},"Performance: Highly stable and performant under varying loads and configurations."),(0,o.kt)("li",{parentName:"ul"},"Observability: An exemplar of an observable service."),(0,o.kt)("li",{parentName:"ul"},"Extensibility: Customizable without touching the core code."),(0,o.kt)("li",{parentName:"ul"},"Unification: Single codebase, deployable as an agent or collector with support for traces, metrics, and logs.")),(0,o.kt)("h2",{id:"instana-backend---configuration"},"Instana backend - configuration"),(0,o.kt)("p",null,"Instana Logging feature is available as a beta functionality, which means, it requires additional configuration inside the Instana backend. In order to enable logging feature, please follow the below steps:"),(0,o.kt)("p",null,"Use the ssh terminal and login to the instana backend server"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ssh root@instana\n")),(0,o.kt)("p",null,"Enable the logging feature by running the below command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"stanctl backend apply --core-feature-flags feature.logging.enabled=true\n")),(0,o.kt)("p",null,"after the changes, you should see the below message "),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"collector001",src:n(72354).Z,width:"714",height:"224"})),(0,o.kt)("p",null,"you can close this terminal window by running the below command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"exit\n")),(0,o.kt)("h2",{id:"instana-backend---verification"},"Instana backend - verification"),(0,o.kt)("p",null,"After applying backend changes, please navigate to the Instana UI / Analytics / Logs - if the Logs section is visible, it means the Instana backend is ready to accept the OpenTelemetry log content. Please confirm your Instana instance with the below screenshot"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"collector001",src:n(42058).Z,width:"657",height:"514"})),(0,o.kt)("h2",{id:"instana-agent---configuration"},"Instana agent - configuration"),(0,o.kt)("p",null,'In this scenario, you will configure OpenTelemetry Collector to send OpenTelemetry data to Instana backend through the Instana agent. First, you need to make sure, the Instana agent is up and running on the "kmaster" host. '),(0,o.kt)("p",null,"The agent was pre-installed into your Lab environment."),(0,o.kt)("p",null,'Open a new terminal window and login to the "kmaster" host using the below command:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ssh root@kmaster\n")),(0,o.kt)("p",null,'Please run the following command to start the agent on "kmaster" host:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl start instana-agent\n")),(0,o.kt)("p",null,"After few minutes, please check the Instana UI and confirm the new agent is reporting data to the Instana backend. You should see similar content to the screen below:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"collector003",src:n(95909).Z,width:"1726",height:"806"})),(0,o.kt)("h2",{id:"opentelemetry-collector---configuration"},"OpenTelemetry Collector - configuration"),(0,o.kt)("p",null,"Once the Instana agent is up and running, you can configure the OpenTelemetry Collector. "),(0,o.kt)("p",null,"OpenTelemetry Collector was already pre-installed into your environment. Please check the below information about the installation, but remember you don't need to install the collector during this Lab"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Please review this installation steps ",(0,o.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/collector/installation/"},"https://opentelemetry.io/docs/collector/installation/"),". "),(0,o.kt)("p",{parentName:"admonition"},"During this scenario, we will be using OpenTelemetry Collector Contrib ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/open-telemetry/opentelemetry-collector-contrib"},"https://github.com/open-telemetry/opentelemetry-collector-contrib"),", which is more advanced version of the standard Collector.")),(0,o.kt)("p",null,"Let's review the OpenTelemetry Collector configuration file, by viewing config.yaml:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd /root/otelcol-contrib\nvim config.yaml\n")),(0,o.kt)("p",null,"There are two key elements of the configuration file:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"log file which will be monitored (in our case - /root/otelcol-contrib/example.log)"),(0,o.kt)("li",{parentName:"ul"},"OTLP endpoint (in our case - 127.0.0.1:4317)")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"collector004",src:n(19796).Z,width:"1207",height:"788"})),(0,o.kt)("p",null,"The file is ready to be used by the OpenTelemetry collector, let's close the configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"<escape> q!\n")),(0,o.kt)("p",null,"and start the OpenTelemetry Collector service "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo otelcol-contrib --config=config.yaml\n")),(0,o.kt)("p",null,"after a moment you should be able to see information about the service waiting for the events like on below screen"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"collector005",src:n(41125).Z,width:"1746",height:"225"})),(0,o.kt)("p",null,"The service is now ready to accept the log changes. Please keep this terminal window open (do not stop the service) and move to the next section."),(0,o.kt)("h2",{id:"log-content-creation"},"Log content creation"),(0,o.kt)("p",null,"Now, let's simulate new log entries creation - the goal is to be sure that OpenTelemetry Collector will send the log data, throught the Instana agent to the Instana backend."),(0,o.kt)("p",null,'Please open a new terminal and login (again) to the "kmaster" host. We need two active sessions, because the previous one keeps the OpenTelemetry Collector up and running. Please login to the "kmaster" host:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ssh root@kmaster\n")),(0,o.kt)("p",null,"navigate to the OpenTelemetry directory"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd /root/otelcol-contrib\n")),(0,o.kt)("p",null,"run these commands, which will add new lines into the existing log file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'echo "2024-02-02 ERROR first line message1" >> example.log\necho "2024-03-02 ERROR second line message2" >> example.log\necho "2024-04-02 ERROR third line message3" >> example.log\n')),(0,o.kt)("h2",{id:"instana-verification"},"Instana verification"),(0,o.kt)("p",null,"After a short moment, please navigate to the Instana UI / Analytics / Logs section and confirm, you can see three logs entries delivered by the Agent using the OpenTelemetry standard. You should be able to see similar content to the below screenshot:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"collector006",src:n(27803).Z,width:"1651",height:"862"})),(0,o.kt)("p",null,"It was shown, that Instana can accept custom log content, using external OpenTelemetry Collector."),(0,o.kt)("h2",{id:"summary"},"Summary"),(0,o.kt)("p",null,"This section concludes the Lab."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Please review additional information about OpenTelemetry Collector filelog receiver ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/filelogreceiver"},"https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/filelogreceiver"))))}m.isMDXComponent=!0},72354:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/collector-001-1081de78e9a978669dab68856fc477df.png"},42058:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/collector-002-8cc86b0800a2d5c9a64afdd83f8d97c4.png"},95909:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/collector-003-22d89b8a20ecf77ca7cb78f0bf96ddae.png"},19796:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/collector-004-6dde09d3b17a08cc247d00a754c1489a.png"},41125:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/collector-005-4a884c1071c924b3fbcffce24c589405.png"},27803:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/collector-006-4a5db49aee3a0aa391c8d15329e048bb.png"}}]);